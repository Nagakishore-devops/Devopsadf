{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Devops-ADF-Demo"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"MySql_LOCAL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MySql_LOCAL'"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datastorageclouddemo.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copydata1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "select * from `demo`"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 4
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ExtractID",
											"type": "Int32"
										},
										"sink": {
											"name": "ExtractID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CompanyInitials",
											"type": "Int32"
										},
										"sink": {
											"name": "CompanyInitials",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Rulesetpointer",
											"type": "String"
										},
										"sink": {
											"name": "Rulesetpointer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FormGroup",
											"type": "String"
										},
										"sink": {
											"name": "FormGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IssueDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "IssueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "StrategyType",
											"type": "String"
										},
										"sink": {
											"name": "StrategyType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StrategyName",
											"type": "String"
										},
										"sink": {
											"name": "StrategyName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PolicyCount",
											"type": "Int32"
										},
										"sink": {
											"name": "PolicyCount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AccountValue",
											"type": "Int32"
										},
										"sink": {
											"name": "AccountValue",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RecordTypeInd",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeInd",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RateEffective",
											"type": "DateTime"
										},
										"sink": {
											"name": "RateEffective",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CurrentPar",
											"type": "Int32"
										},
										"sink": {
											"name": "CurrentPar",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MinimumPar",
											"type": "Int32"
										},
										"sink": {
											"name": "MinimumPar",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CurrentCap",
											"type": "Int32"
										},
										"sink": {
											"name": "CurrentCap",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MiniimumCap",
											"type": "Int32"
										},
										"sink": {
											"name": "MiniimumCap",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CurrentSpread",
											"type": "Int32"
										},
										"sink": {
											"name": "CurrentSpread",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MaximumSpread",
											"type": "Int32"
										},
										"sink": {
											"name": "MaximumSpread",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CurrentFixed",
											"type": "Int32"
										},
										"sink": {
											"name": "CurrentFixed",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GuaranteedFixed",
											"type": "Int32"
										},
										"sink": {
											"name": "GuaranteedFixed",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "FeeInd",
											"type": "String"
										},
										"sink": {
											"name": "FeeInd",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "LocalMySqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDatalakestorage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalMySqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDatalakestorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Localmysql.csv",
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalMySqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySql_LOCAL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`demo`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySql_LOCAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql_LOCAL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('MySql_LOCAL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Local-integrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Local-integrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Local-integrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}